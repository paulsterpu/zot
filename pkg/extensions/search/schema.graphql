scalar Time

type CVEResultForImage {
    Tag: String
    CVEList: [CVE]
}

type CVE {
    Id: String
    Title: String
    Description: String
    Severity: String
    PackageList: [PackageInfo]
}

type PackageInfo {
    Name: String
    InstalledVersion: String
    FixedVersion: String
}

type ImgResultForCVE {
    Name: String
    Tags: [String]
}

type ImgResultForFixedCVE {
    Tags: [TagInfo]
}

type TagInfo {
    Name: String
    Digest: String
    Timestamp: Time
}

type Layer {
    Size: String,
    Digest: String
}

type ImageInfo {
    Name: String
    Tag: String
    ConfigDigest: String
    Digest: String
    Latest: String
    Layers: [Layer]
    LastUpdated: Time
    Description: String
    Licenses: String
    Vendor: String
    Size: String
    Labels: String
}

type Query {
    CVEListForImage(image: String!) :CVEResultForImage
    ImageListForCVE(id: String!) :[ImageInfo]
    TagListForCve(id: String!, image: String!, getFixed: Boolean) :[ImageInfo]
    ImageListForDigest(digest: String!) :[ImageInfo]
    ImageListWithLatestTag:[ImageInfo]
    ImageList(imageName: String) :[ImageInfo]
}
